from telebot import types
import telebot
import random
import conf
import csv


"""
‚úÖ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã /start –∏ /help –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
‚úÖ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –¥–≤–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ –ø—Ä–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —ç–º–æ—Ü–∏–∏
‚úÖ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ results.csv
* –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ results.csv –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è —Ñ–∏–¥–±–µ–∫: 
  –∫–∞–∫ –µ–≥–æ –æ—Ç–≤–µ—Ç—ã —Å–æ–æ—Ç–Ω–æ—Å—è—Ç—Å—è —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö 
  (–º–æ–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö, –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é, 
  –ø–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –≥–æ—Ä–æ–¥–∞–º)
‚úÖ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å—Ç–∏–∫–µ—Ä—É/–≥–∏—Ñ—É –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø—Ä–æ—Å
"""

bot = telebot.TeleBot(conf.TOKEN)
sticker_ids = [
    'CAACAgIAAxkBAAECYkNgu2PoW9bCYv7JgLlPr1MKmt76KAAC7QADPIpXGh5vcLokkxR7HwQ',
    'CAACAgIAAxkBAAECYkVgu2P0_2aKGjsqru0qgP2fEJ9mZQACGAADenb4EXFNJy-jEA1jHwQ',
    'CAACAgIAAxkBAAECYkdgu2QF_NrKsn6PUq7kQAqgbg5Q7gACLQUAAiMFDQABtwnyEwyU6_wfBA',
    'CAACAgUAAxkBAAECYktgu2Qa6PnKc5-JusUR3_ilo0eHNQACxQYAAszG4gK3wUYfyR3TSR8E',
    'CAACAgIAAxkBAAECYk9gu2RIvNxErcaHrXLrav9euuuA_QACpwADfyesDlW4WzNWUWRgHwQ',
    'CAACAgIAAxkBAAECYs1gu5HgGAJgByQ1PoDRao9OSrSKEQACrgADfyesDmEN9hyD4C20HwQ',
    'CAACAgIAAxkBAAECYtBgu5Hus3ZAT25zOKGp7Kx81uK3GQACpgADfyesDpUUIUQjXhW_HwQ',
    'CAACAgQAAxkBAAECYtJgu5H7uShSBk6LBk81GETORp9MxAACIwADX8YBGblN6Er12GDkHwQ',
    'CAACAgIAAxkBAAECYtRgu5ILZJUVxTKG_gad38qSpZy8AQACegUAAiMFDQABbpLHbsuBRvUfBA',
    'CAACAgIAAxkBAAECYtZgu5Ic9l8y6Zq1SIqlj1Fd67guwgACMgUAAiMFDQABe6yTTsfJ4MYfBA'
]


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –ª–∏–Ω–≥–≤–∏—Å—Ç–∞–º –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å–µ–Ω—Ç–∏–º–µ–Ω—Ç-–∞–Ω–∞–ª–∏–∑ "
                     "—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç–∏–∫–µ—Ä–æ–≤ –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ! –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –æ—Ç–≤–µ—Ç–∏—Ç—å "
                     "–Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ :)\n\n"
                     "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /sticker üåü.\n\n"
                     "–ï—Å–ª–∏ –≤–¥—Ä—É–≥ –≤–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Å—Ç–∏–∫–µ—Ä –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥—Ä—É–≥–æ–π, "
                     "–ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /sticker –µ—â–µ —Ä–∞–∑!\n\n"
                     "–í—ã —Å–º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ csv), "
                     "–∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–π–¥–µ—Ç–µ –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ /results")


user_data = {}


@bot.message_handler(commands=['sticker'])
def send_sticker(message):
    sticker = random.choice(sticker_ids)
    user_data['sticker_id'] = sticker
    user_data['user_id'] = message.chat.id
    bot.send_sticker(message.chat.id, sticker)
    bot.send_message(message.chat.id,
                     '1. –ï—Å–ª–∏ –±—ã –≤–∞—à –¥—Ä—É–≥ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞, '
                     '–∫–∞–∫–∏–º –±—ã –æ–Ω–æ –º–æ–≥–ª–æ –±—ã—Ç—å?')
    bot.register_next_step_handler(message, q1)


def q1(message):
    user_data['q1'] = message.text
    bot.send_message(message.chat.id,
                     '2. –í –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã –±—ã –º–æ–≥–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä?')
    bot.register_next_step_handler(message, q2)


def q2(message):
    user_data['q2'] = message.text
    keyboard = types.ReplyKeyboardMarkup(True, True)
    keyboard.row('/üòÑ', '/ü•∞', '/ü§®', '/ü•∫', '/üò°', '/üòé', '/üò¢', '–¥—Ä—É–≥–æ–µ')
    bot.send_message(message.chat.id,
                     '3. –° –∫–∞–∫–æ–π —ç–º–æ—Ü–∏–µ–π —É –≤–∞—Å –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —ç—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä?',
                     reply_markup=keyboard)
    bot.register_next_step_handler(message, q3)


def q3(message):
    user_data['q3'] = message.text
    keyboard = types.ReplyKeyboardMarkup(True, True)
    keyboard.row('0', '1', '2', '3', '4', '5')
    bot.send_message(message.chat.id,
                     '4. –ù–∞—Å–∫–æ–ª—å–∫–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞ —ç—Ç–∞ —ç–º–æ—Ü–∏—è?',
                     reply_markup=keyboard)
    bot.register_next_step_handler(message, q4)


def q4(message):
    user_data['q4'] = message.text
    bot.send_message(message.chat.id,
                     '–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?')
    bot.register_next_step_handler(message, age)


def age(message):
    user_data['age'] = message.text
    bot.send_message(message.chat.id,
                     '–ö–∞–∫–æ–π –≤–∞—à —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫?')
    bot.register_next_step_handler(message, lang)


def lang(message):
    user_data['lang'] = message.text
    bot.send_message(message.chat.id,
                     '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –∂–∏–≤–µ—Ç–µ?')
    bot.register_next_step_handler(message, city)


def city(message):
    user_data['city'] = message.text
    keyboard = types.ReplyKeyboardMarkup(True, True)
    keyboard.row('–î–∞', '–ù–µ—Ç')
    bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?', reply_markup=keyboard)
    bot.register_next_step_handler(message, if_continue)


def if_continue(message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ csv
    with open('results.csv', 'a') as csvf1:
        writer = csv.writer(csvf1, delimiter=' ')
        writer.writerow(user_data.values())
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    respondents = set()
    cities = {}
    with open('results.csv', 'r') as csvf2:
        headers = csvf2.readline()
        for answer in csv.reader(csvf2, delimiter=' '):
            respondents.add(answer[1])
            if answer[8] not in cities:
                cities[answer[8].lower()] = 1
            else:
                cities[answer[8].lower()] += 1

    bot.send_message(message.chat.id, f'–í—ã ‚Äì {len(respondents)}-–π —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç! –ö—Ä—É—Ç–æ!')
    bot.send_message(message.chat.id, f'–ê –µ—â–µ –≤—ã {cities[user_data["city"]]}-–π —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç –∏–∑ –≥–æ—Ä–æ–¥–∞ {user_data["city"]}!')

    # –•–æ—á–µ—Ç –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞–Ω—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
    answer = message.text.strip()
    if answer == '–î–∞':
        bot.send_message(message.chat.id, '–ü—Ä–æ–¥–æ–ª–∂–∏–º!')
        send_sticker(message)
    else:
        bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ! –î–æ —Å–∫–æ—Ä–æ–≥–æ ‚ò∫Ô∏è')


@bot.message_handler(commands=['results'])
def send_doc(message):
    with open('results.csv', 'r') as f:
        bot.send_document(message.chat.id, f)


if __name__ == '__main__':
    bot.polling(none_stop=True)
